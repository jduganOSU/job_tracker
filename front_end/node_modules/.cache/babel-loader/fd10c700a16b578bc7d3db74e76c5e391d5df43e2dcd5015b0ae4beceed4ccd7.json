{"ast":null,"code":"var _jsxFileName = \"/Users/jackdugan/Desktop/job_tracker/front_end/src/components/JobCard.js\";\nimport React from 'react';\nimport { deleteJob } from './jobService'; // Adjust the import path as necessary\nimport './css/JobCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobCard = ({\n  job,\n  onDeleteSuccess\n}) => {\n  // Function to handle the click on the delete button\n  const onClickDelete = async () => {\n    if (window.confirm(`Are you sure you want to delete \"${job.title}\"?`)) {\n      try {\n        await deleteJob(job._id);\n        alert('Job deleted successfully');\n        onDeleteSuccess(); // Trigger a callback for successful deletion\n      } catch (error) {\n        alert('Failed to delete job');\n        console.error('Error deleting the job:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company-name\",\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", job.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Skills: \", job.skills.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", job.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted Date: \", new Date(job.postedDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = JobCard;\nexport default JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["React","deleteJob","jsxDEV","_jsxDEV","JobCard","job","onDeleteSuccess","onClickDelete","window","confirm","title","_id","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","company","description","skills","join","status","Date","postedDate","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/Users/jackdugan/Desktop/job_tracker/front_end/src/components/JobCard.js"],"sourcesContent":["import React from 'react';\nimport { deleteJob } from './jobService'; // Adjust the import path as necessary\nimport './css/JobCard.css';\n\nconst JobCard = ({ job, onDeleteSuccess }) => {\n    // Function to handle the click on the delete button\n    const onClickDelete = async () => {\n        if (window.confirm(`Are you sure you want to delete \"${job.title}\"?`)) {\n            try {\n                await deleteJob(job._id);\n                alert('Job deleted successfully');\n                onDeleteSuccess(); // Trigger a callback for successful deletion\n            } catch (error) {\n                alert('Failed to delete job');\n                console.error('Error deleting the job:', error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"job-card\">\n            <div>\n                <div className=\"job-header\">\n                    <h2>{job.title}</h2>\n                    <span className=\"company-name\">{job.company}</span>\n                </div>\n                <div className=\"job-details\">\n                    <p>Description: {job.description}</p>\n                    <p>Skills: {job.skills.join(', ')}</p>\n                    <p>Status: {job.status}</p>\n                    <p>Posted Date: {new Date(job.postedDate).toLocaleDateString()}</p>\n                </div>\n            </div>\n            <div className=\"button-container\">\n                <button onClick={onClickDelete}>Delete</button>\n                <button>Update</button> {/* This can later be linked to an update function */}\n            </div>\n        </div>\n    );\n};\n\nexport default JobCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}