{"ast":null,"code":"var _jsxFileName = \"/Users/jackdugan/Desktop/job_tracker/front_end/src/components/JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport JobObject from './JobObject'; // Ensure this is the correct path to your JobObject component\nimport { getAllJobs } from './jobService'; // Adjust the path to your service that fetches the jobs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      setLoading(true);\n      try {\n        const fetchedJobs = await getAllJobs();\n        setJobs(fetchedJobs);\n      } catch (error) {\n        setError('Failed to fetch jobs');\n        console.error('Error fetching jobs:', error);\n      }\n      setLoading(false);\n    };\n    fetchJobs();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading jobs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobObject, {\n      job: job\n    }, job._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(JobList, \"b6LUV2A4HsGLGhyV083wt4paZXs=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useEffect","useState","JobObject","getAllJobs","jsxDEV","_jsxDEV","JobList","_s","jobs","setJobs","error","setError","loading","setLoading","fetchJobs","fetchedJobs","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","_id","_c","$RefreshReg$"],"sources":["/Users/jackdugan/Desktop/job_tracker/front_end/src/components/JobList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport JobObject from './JobObject';  // Ensure this is the correct path to your JobObject component\nimport { getAllJobs } from './jobService';  // Adjust the path to your service that fetches the jobs\n\nconst JobList = () => {\n    const [jobs, setJobs] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchJobs = async () => {\n            setLoading(true);\n            try {\n                const fetchedJobs = await getAllJobs();\n                setJobs(fetchedJobs);\n            } catch (error) {\n                setError('Failed to fetch jobs');\n                console.error('Error fetching jobs:', error);\n            }\n            setLoading(false);\n        };\n\n        fetchJobs();\n    }, []);\n\n    if (loading) return <p>Loading jobs...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div>\n            {jobs.length > 0 ? (\n                jobs.map(job => <JobObject key={job._id} job={job} />)\n            ) : (\n                <p>No jobs found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default JobList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAE;AACtC,SAASC,UAAU,QAAQ,cAAc,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAME,WAAW,GAAG,MAAMZ,UAAU,CAAC,CAAC;QACtCM,OAAO,CAACM,WAAW,CAAC;MACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZC,QAAQ,CAAC,sBAAsB,CAAC;QAChCK,OAAO,CAACN,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;MACAG,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOP,OAAA;IAAAY,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC1C,IAAIX,KAAK,EAAE,oBAAOL,OAAA;IAAAY,QAAA,EAAIP;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhC,oBACIhB,OAAA;IAAAY,QAAA,EACKT,IAAI,CAACc,MAAM,GAAG,CAAC,GACZd,IAAI,CAACe,GAAG,CAACC,GAAG,iBAAInB,OAAA,CAACH,SAAS;MAAesB,GAAG,EAAEA;IAAI,GAAlBA,GAAG,CAACC,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,CAAC,gBAEtDhB,OAAA;MAAAY,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CAjCID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}