{"ast":null,"code":"var _jsxFileName = \"/Users/jackdugan/Desktop/job_tracker/front_end/src/components/ListView.js\";\nimport React from 'react';\nimport ListItem from './ListItem';\nimport './css/ListView.css'; // Ensure you have appropriate CSS for ListView\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListView = ({\n  items,\n  type\n}) => {\n  const jobHeaders = [\"Job Title\", \"Description\", \"Company\", \"Skills\", \"Status\"];\n  const companyHeaders = [\"Company Name\", \"Location\", \"Industry\", \"Description\", \"Founded\"];\n\n  // Determine which headers to use based on the type\n  const headers = type === 'jobs' ? jobHeaders : companyHeaders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-header\",\n      children: headers.map(header => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-cell\",\n        children: header\n      }, header, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n      item: item,\n      type: type\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ListView;\nexport default ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["React","ListItem","jsxDEV","_jsxDEV","ListView","items","type","jobHeaders","companyHeaders","headers","className","children","map","header","fileName","_jsxFileName","lineNumber","columnNumber","item","_id","_c","$RefreshReg$"],"sources":["/Users/jackdugan/Desktop/job_tracker/front_end/src/components/ListView.js"],"sourcesContent":["import React from 'react';\nimport ListItem from './ListItem';\nimport './css/ListView.css';  // Ensure you have appropriate CSS for ListView\n\nconst ListView = ({ items, type }) => {\n  const jobHeaders = [\"Job Title\", \"Description\", \"Company\", \"Skills\", \"Status\"];\n  const companyHeaders = [\"Company Name\", \"Location\", \"Industry\", \"Description\", \"Founded\"];\n\n  // Determine which headers to use based on the type\n  const headers = type === 'jobs' ? jobHeaders : companyHeaders;\n\n  return (\n    <div className=\"list-view\">\n      <div className=\"grid-header\">\n        {headers.map(header => (\n          <div key={header} className=\"header-cell\">{header}</div>\n        ))}\n      </div>\n      {items.map(item => (\n        <ListItem key={item._id} item={item} type={type} />\n      ))}\n    </div>\n  );\n};\n\nexport default ListView;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,oBAAoB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAK,CAAC,KAAK;EACpC,MAAMC,UAAU,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAC9E,MAAMC,cAAc,GAAG,CAAC,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,CAAC;;EAEzF;EACA,MAAMC,OAAO,GAAGH,IAAI,KAAK,MAAM,GAAGC,UAAU,GAAGC,cAAc;EAE7D,oBACEL,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBR,OAAA;MAAKO,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBF,OAAO,CAACG,GAAG,CAACC,MAAM,iBACjBV,OAAA;QAAkBO,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEE;MAAM,GAAvCA,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLZ,KAAK,CAACO,GAAG,CAACM,IAAI,iBACbf,OAAA,CAACF,QAAQ;MAAgBiB,IAAI,EAAEA,IAAK;MAACZ,IAAI,EAAEA;IAAK,GAAjCY,IAAI,CAACC,GAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GAnBIhB,QAAQ;AAqBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}