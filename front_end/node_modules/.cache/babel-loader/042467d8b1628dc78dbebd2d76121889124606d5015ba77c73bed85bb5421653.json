{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5040'; // Change this to the URL of your backend\n\nexport const createJob = async jobData => {\n  console.log('attempting post');\n  try {\n    const response = await fetch(`${API_BASE_URL}/jobs`, {\n      // Ensure the endpoint matches your backend route\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(jobData)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json(); // This will return the job data from the backend if successful\n  } catch (error) {\n    console.error('Failed to create job:', error);\n    throw error; // Re-throw the error if you want to handle it in the component\n  }\n};\nexport const getAllJobs = async () => {\n  console.log('Fetching all jobs');\n  try {\n    const response = await fetch(`${API_BASE_URL}/jobs`, {\n      // Ensure the endpoint matches your backend route\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json(); // This will return the job data from the backend if successful\n  } catch (error) {\n    console.error('Failed to retrieve jobs:', error);\n    throw error; // Re-throw the error if you want to handle it in the component\n  }\n};\nexport const deleteJob = async jobId => {\n  console.log('Attempting to delete job');\n  try {\n    const response = await fetch(`${API_BASE_URL}/jobs/${jobId}`, {\n      // Use template literals to include the job ID\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json(); // This will return the confirmation message from the backend if successful\n  } catch (error) {\n    console.error('Failed to delete job:', error);\n    throw error; // Re-throw the error if you want to handle it in the component\n  }\n};","map":{"version":3,"names":["API_BASE_URL","createJob","jobData","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","getAllJobs","deleteJob","jobId"],"sources":["/Users/jackdugan/Desktop/job_tracker/front_end/src/api/jobService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5040'; // Change this to the URL of your backend\n\nexport const createJob = async (jobData) => {\n    console.log('attempting post');\n  try {\n    const response = await fetch(`${API_BASE_URL}/jobs`, { // Ensure the endpoint matches your backend route\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(jobData)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json(); // This will return the job data from the backend if successful\n  } catch (error) {\n    console.error('Failed to create job:', error);\n    throw error; // Re-throw the error if you want to handle it in the component\n  }\n};\n\nexport const getAllJobs = async () => {\n  console.log('Fetching all jobs');\n  try {\n      const response = await fetch(`${API_BASE_URL}/jobs`, { // Ensure the endpoint matches your backend route\n          method: 'GET',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          }\n      });\n      if (!response.ok) {\n          throw new Error('Network response was not ok');\n      }\n      return response.json(); // This will return the job data from the backend if successful\n  } catch (error) {\n      console.error('Failed to retrieve jobs:', error);\n      throw error; // Re-throw the error if you want to handle it in the component\n  }\n};\n\nexport const deleteJob = async (jobId) => {\n  console.log('Attempting to delete job');\n  try {\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}`, { // Use template literals to include the job ID\n          method: 'DELETE',\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n          }\n      });\n      if (!response.ok) {\n          throw new Error('Network response was not ok');\n      }\n      return response.json(); // This will return the confirmation message from the backend if successful\n  } catch (error) {\n      console.error('Failed to delete job:', error);\n      throw error; // Re-throw the error if you want to handle it in the component\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;EACxCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,YAAa,OAAM,EAAE;MAAE;MACrDO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpCb,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,YAAa,OAAM,EAAE;MAAE;MACnDO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZZ,OAAO,CAACY,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOC,KAAK,IAAK;EACxCf,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,YAAa,SAAQkB,KAAM,EAAC,EAAE;MAAE;MAC5DX,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}